---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-jenkins-pod
  labels:
    type: nginx-jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      type: nginx-jenkins
  template:
    metadata:
      labels:
        type: nginx-jenkins
    spec:
      containers:
        - name: nginx-container
          image: nginx
          ports:
            - containerPort: 80
        - name: jenkins-container
          image: jenkins/jenkins
          resources:
            requests:
              memory: "250Mi"
              cpu: "500m"
            limits:
              memory: "500Mi"
              cpu: "750m"
          ports:
            - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-jenkins-sv
spec:
  type: NodePort
  ports:
    - name: nginx-port
      targetPort: 80
      port: 30008
      nodePort: 30008
    - name: jenkins-port
      targetPort: 8080
      port: 30006
      nodePort: 30006
  selector:
    type: nginx-jenkins
...







##########################################
#To access nginx server here excute below command (kubectl exec -it jenkins-pod-6fbbc44687-jkcrt -c nginx-server -- bash)
#
#In this command, we added the -c or --container flag followed by the name of the nginx-server container. This tells kubectl to execute the bash command in the specified container rather than the default jenkins-server container.
#
#Make sure that you have the nginx-server container running in the jenkins-pod-6fbbc44687-jkcrt Pod for this command to work correctly. If the nginx-server container is not present in the Pod, you might need to check your Pod's YAML manifest and ensure that both containers are defined correctly.
#
#Also, please note that accessing the nginx-server container from the jenkins-pod-6fbbc44687-jkcrt Pod assumes that both containers are part of the same Pod and share the same network namespace. If the containers are part of different Pods or do not share the same network namespace, direct access from one container to another might not be possible, and you might need to use other methods such as using Kubernetes Services or Shared Volumes to facilitate communication between them.Also, please note that accessing the nginx-server container from the jenkins-pod-6fbbc44687-jkcrt Pod assumes that both containers are part of the same Pod and share the same network namespace. If the containers are part of different Pods or do not share the same network namespace, direct access from one container to another might not be possible, and you might need to use other methods such as using Kubernetes Services or Shared Volumes to facilitate communication between them.
#
##############################################

