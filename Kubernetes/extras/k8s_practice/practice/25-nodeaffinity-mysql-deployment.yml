# file name 25-nodeaffinity-mysql-pod.yml
# which means this mysql pods there 2 pods creating those all pods should only run on perticular slave only 
# first we need to choose server take id of that slave in the cluster then specify with key=value (that key value specification we need to specify in the definition file ) then only it will work 
# command for to specify ##### kubectl label nodes slave-id key1=value1 ####(key and value can be anything )
# then create a definition file provide both key=value i that file in section affinity section where match section : key1 and operator section : value1  
# then automatically cluster identify those mysql pods will be place on that server only based on key=value 
# only when you specify node in the cluster then only it will work otherwise it will still in pending state containers will not created 
# otherwise remove those affinity section and run the definition file 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploymnt-mysql
  labels:
    type: db
spec:
  replicas: 2
  selector:
    matchLabels:
      type: db
  template:
    metadata:
      name: pod-mysql
      labels:
        type: db
    spec:
      containers:
        - name: mydb
          image: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: mypassword
            - name: MYSQL_DATABASE
              value: mydatabase
            - name: MYSQL_USER
              value: myuser
            - name: MYSQL_PASSWORD
              value: mypassword

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: key1
                  operator: In
                  values:
                    - value1


...

