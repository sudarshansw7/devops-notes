ConfigMaps:
------------------
-->configmaps used to store key=value pairs
-->suppose if we want to pass environment variable we can able to store those information i configmaps 
-->In kubernetes a configMap is an API object this will used to store configuration data that can be consumed by pods or other resources in the cluster 
-->it provides a way to decouple configuration settings from the containerized applications, making it easier to manage and update configuration data without modifying the application code or container images. 
-->ConfigMaps store key-value pairs or provide the ability to mount configuration files as data 
-->This can be include environment variables, command Line arguments, configuration files, or any other type of configuration data required by our application
-->In simple words if we have any application that application required some configuration details to work based upon our use case then we can pass those details inside ConfigMaps and pass key worrds inside Deployments or any pod definition files to include 
Example :
---------------
-->suppose we have tomee application so tomee application containe some configuration file those are located insde /etc/tomcat9 
-->here i want place customised tomcat-users.xml file into container then we can include those details inside ConfigMaps then we ca pass into Pod at the time creation of pod 
 
ConfigMap Example:
--------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: mangodb-configmap
data:
  database_url: magodb-service
----------------------------------------------

Secret:
------------
-->In kuberenetes a secret is an API object used to store sensitive information such as passwords, tokens, or ssh keys.
-->secrets provide a way to securly store and manage sensitive data within the cluster 
-->secrets can be used by applications and pods to access sensitive information without exposing it in plain text. 
-->they are typically used to store data and that data needs to be passed to containers securly, such as database credentials, API keys, or TLS certificates.
-->kubernetes Secrets are stored in the cluster etcd datastore, encrypted at rest. 
-->they can be accessed by pods or other kuberenetes objets securly.
-->Secrets can be mounted as files or exposed as environment variables within a container. 
Types od secrets:
--------------------------
1. Opaque: 
---------------
-->this is the most used type od secret 
-->it will allow you to store arbitrary key-value pairs as base64-encoded strings.  
-->it is suitable for storing general purpose sensitive information

2. Docker-registry:
--------------------------
-->used for storing credentials to for authenticate with a private Docker registry
-->it includes the server username, password, and email fields.  

3. TLS:
-----------
-->used to store TLS certificates and private keys. it inludes the tls.crt and tls.key fields. 

4. Service Account:
---------------------------
-->here it automatically created secrets that provide credentials for accessing the kuberenetes API. 
-->They are associated with the service accounts and allow pods to authenticate with  the API server. 

Secret Example:
-----------------------------
apiVersion: v1
kind: Secret
metadata:
  name: mangodb-secret 
type: Opaque
data:
  magodb-root-username: yqwyugqyi+=
  mango-db-password: camsmbdkpok+=

--------------------------------------------------------
