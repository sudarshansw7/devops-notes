Docker - session 1 
-----------------------
--> Docker is a containerzation tool
--> Docker is platform independent
--> Docker is an Application not os 
--> Docker comes in Community Edition (free) Enterprice Edition (paid) 
--> Docker can be installed on top of any type of OS 
 
Link:  https://drive.google.com/file/d/1Ih_iyFAc3VqBADiz060OVIn94tqigrkA/view?usp=share_link

======================================
1. Docker is a platform that allows developers to build, ship, and run applications as containerized microservices. 
2. A Docker container is a lightweight and portable executable package that contains everything needed to run the application, including the code, runtime, libraries, and system tools. 
3. Docker containers can be run on any platform that supports Docker, making it easy to deploy and manage applications across different environments.

The Docker platform consists of several components, including:

Docker engine: The core component that runs and manages containers on a host system.
Docker registry: it is repository where all images are stored ru as container  
Docker CLI: A command-line tool for managing Docker containers, images, and other resources.
Docker Compose: A tool for defining and running multi-container Docker applications.
Docker has become popular for its ability to simplify application development, testing, and deployment. By packaging an application and its dependencies into a container, developers can create a consistent and reproducible environment that can be easily moved between development, testing, and production environments. This can help reduce deployment time and increase the reliability and scalability of applications.
------------------------
above detailed info generated by AI
===========================================================
class--
--------------------
hypervisior
------------
using hypervisior able to run guest os 
-->multiple OS running on the single server or system at the same time this is happening through hypervisior software technology 
-->hypervisor also called as virtualization 
-------------------
-->OS is the system software, software which directly talks to the hardware is called system software 
-->end users can use directly is called application software
-->all type of cloud providers aws, azure and many more use only hypervisior technology 
-->aws works hypervisor based on citrix these are different hypervisor also there  but aws uses citrix hypervisor technology 
--> hypervisor mainly usefull to run multiple os in the sigle machine  
---------------------------------------------------------------
-->observe the image one 
-----------------
-->see the oracle application  how it will run the backround 
-->in the image oracle application and SQL application available
-->take one application 
-->oracle application to run need to communicate with guest os (redhat)
-->guest os will communicate with hypervisor 
-->hypervisor will communicate with host os 
--> host os will communicate with the Hardware of the system
-->to run oracle application there are lot of steps need to taken 
-->and hardware and memory consumption taken heavy
--> to avoid these and overcome this virtualization we use Docker containerization  
----------------------------------------------------------------------
-->observe the image two
-----------------------------
--> at the time we use virtualization to run multiple os we use guest os 
--> but in the docker containerization we use instead of virtualization 
--> Docker contaainerization  we dont need guest os we can directly use software application   
-->software application directly run on top of Docker Engine we called them Containers 
-->Docker Achievs Process isolation  
	process means oracle is process and sql is process 
	isolation means separation of applications 
------------------------------------------------
-->earlier these applications depending on some operating system to run 
-->to install skype application we need OS right 
-->process isolation means removing the dependency of the os and using applications on the top of the Docker Engine in the form of container that way we called process isolation 
----------------------------------------------
-->suppose install OS in a system using iso image file it will take upto 45 min
-->the same process installing OS using Docker it will take only 2 sec of time 
------------------------------------------------------
Dynamic Hardware Allocation 
-----------------------------
-->Docker will work based on Dynamic hardware allocation 
-->suppose two applications running on Docker Engine 
--> tomcat and jenkins
-->both containers using same hardware of the system suppose i am only using jenkins docker automatically allocate more hardware to jenkins 
-->if tomcat i use it will allocate to tomcat
--------------------------------------------------------------------
Build-Ship-Run
----------------------------------------
-->Docker can be build ship run 
-->docker can be represents entire SDLC (software development life cycle)
--> Build represents developing the environment
--> Ship represents testing environment or package   
--> Run represents production environment 
------------------------------------------------------------------------------------
Migration
--------------------------
-->if we want to backup data we only able to bakup photos and media etc 
-->we cant backup os and apllication and configuration 
-->using Docker we can able to backup everything on the system including OS and data and software application 
-->simply copy from one machine to another machine simply as you copy files 
--------------------------------------------------------------------
1.Docker is a Containerization tool
2.Meaning of containers is applications independent from the os 
3.Generally applications are dependent on os in the case of docker that dependiencies id removed 
4.we call this process isolation 
5.process isolation means application not dependent not any os
application directly on top of software known as Docker Engine 
6.All the applications run top of Docker Engine we called them as Docker Container  
===================================